@%@UCRWARNING=#@%@

@!@
import re
vhost_ids = []
for key in configRegistry.iterkeys():
	match = re.match(r'^apache2/vhosts/(.*)/subdomain', key)
	if match:
		vhost_ids.append(match.group(1))

for vhost_id in vhost_ids:
	print('''

<VirtualHost *:80>
	ServerName {subdomain}.{hostname}.{domainname}
	IncludeOptional {file}
</VirtualHost>

<IfModule mod_ssl.c>
<VirtualHost *:443>
	ServerName {subdomain}.{hostname}.{domainname}
	IncludeOptional {file}
'''.format(
		subdomain=configRegistry.get('apache2/vhosts/%s/subdomain' % vhost_id),
		file=configRegistry.get('apache2/vhosts/%s/file' % vhost_id, '/dev/null'),
		hostname=configRegistry.get('hostname'),
		domainname=configRegistry.get('domainname'),
	))

	# 00start section
	print('''
	SSLEngine on
	SSLProxyEngine on
	SSLProxyCheckPeerCN off
	SSLProxyCheckPeerName off
	SSLProxyCheckPeerExpire off
''')
	print '	SSLCertificateFile /etc/univention/ssl/*.%s.%s/cert.pem' % (configRegistry.get('hostname'), configRegistry.get('domainname'))
	print '	SSLCertificateKeyFile /etc/univention/ssl/*.%s.%s/private.key' % (configRegistry.get('hostname'), configRegistry.get('domainname'))
	print '	SSLCACertificateFile /etc/univention/ssl/ucsCA/CAcert.pem'

	# 10hsts section
	RE_TIME = re.compile(r'([0-9]+)([wdhms]?)')
	def parse_time(text):
		return reduce(
			lambda s, (v, u): s + int(v, 10) * {
				'': 1,
				's': 1,
				'm': 60,
				'h': 60*60,
				'd': 24*60*60,
				'w': 7*24*60*60,
			}[u],
			RE_TIME.findall(text),
			0)
	if configRegistry.is_true('apache2/hsts'):
		options = [
			'max-age=%s' % parse_time(configRegistry.get('apache2/hsts/max-age', '10886400')),
		]
		if configRegistry.is_true('apache2/hsts/includeSubDomains'):
			options.append('includeSubDomains')
		print '<IfModule mod_headers.c>'
		print 'Header always set Strict-Transport-Security "%s"' % ('; '.join(options),)
		print '</IfModule>'

	# 99end section
	print('''
</VirtualHost>
</IfModule>
''')
@!@
