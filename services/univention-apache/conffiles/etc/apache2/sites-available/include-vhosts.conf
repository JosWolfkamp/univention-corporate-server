@%@UCRWARNING=#@%@

@!@
import re

vhosts = []
for key in configRegistry.iterkeys():
	match = re.match(r'^apache2/vhosts/(?P<id>.*)/(?P<domain>.*)/(?P<port>\d*)/enabled', key)
	if match:
		vhosts.append(match.groupdict())

for vhost in vhosts:
	group_key = '%s/%s/%s' % (vhost['id'], vhost['domain'], vhost['port'])
	vhost_key = 'apache2/vhosts/%s/' % group_key
	print('# Virtual Host for %s' % group_key)
	if configRegistry.is_false(vhost_key + 'enabled'):
		print('# disabled')
		continue

	if configRegistry.get(vhost_key + 'ssl/certificate'):
		print('<IfModule mod_ssl.c>')
	print('<VirtualHost *:%s>' % vhost['port'])
	server_name = []
	server_name.append(vhost['domain'])
	try:
		server_name += configRegistry.get(vhost_key + 'aliases').split(',')
	except AttributeError:
		pass
	print('	ServerName ' + ' '.join(server_name))

	try:
		files = configRegistry.get(vhost_key + 'files').split(',')
		for file in files:
			print("	IncludeOptional %s" % file)
	except:
		pass

	if configRegistry.get(vhost_key + 'ssl/certificate'):
		print('''
	SSLEngine on
	SSLProxyEngine on
	SSLProxyCheckPeerCN off
	SSLProxyCheckPeerName off
	SSLProxyCheckPeerExpire off
''')

	if configRegistry.get(vhost_key + 'ssl/certificate'):
		print('	SSLCertificateFile %s' % configRegistry.get(vhost_key + 'ssl/certificate'))
	if configRegistry.get(vhost_key + 'ssl/key'):
		print('	SSLCertificateKeyFile %s' % configRegistry.get(vhost_key + 'ssl/key'))
	if configRegistry.get(vhost_key + 'ssl/ca'):
		print('	SSLCACertificateFile %s' % configRegistry.get(vhost_key + 'ssl/ca'))
	if configRegistry.get(vhost_key + 'ssl/certificatechain'):
		print('	SSLCertificateChainFile %s' % configRegistry.get(vhost_key + 'ssl/certificatechain'))

	print('''
</VirtualHost>
''')
	if configRegistry.get(vhost_key + 'ssl/certificate'):
		print('</IfModule>')
	print()
@!@
